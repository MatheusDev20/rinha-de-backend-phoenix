version: "3.5"

services:
  api1: &api
    build: .
    hostname: api1
    environment:
      - PORT=4000
      - SECRET_KEY_BASE=EMk0oZcIU4PbAbeq2pRpzWxBr2rp0ldY5fg9snheQVuRrOXJDKj5dagSTUDGyJHZ
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rinha_backend
      - PHX_SERVER=true
    ports:
      - "4000:4000"
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 150MB
    depends_on:
      db:
        condition: service_healthy
  api2:
    <<: *api 
    hostname: api2
    environment:
      - PORT=4001
      - SECRET_KEY_BASE=WBoZlRr3OyXI2fMjk7kfZfYpI5xl0vLjsrQMh8QI7kbBbOku1lzTBBYAcNJFWG9z
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rinha_backend
      - PHX_SERVER=true
    ports:
      - "4001:4001"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999" 
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 50MB
  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha_backend
    ports:
      - "5432:5432"
    command: postgres -c max_connections=30
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: "200MB"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d rinha_backend" ]
      interval: 10s
      timeout: 1s
      retries: 2
  
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1